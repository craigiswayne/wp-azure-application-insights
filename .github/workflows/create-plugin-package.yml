name: Create Plugin Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

permissions:
  contents: write

env:
  PHP_VERSION: 8.2
  PLUGIN_FILE: "class-wp-azure-application-insights.php"

jobs:
  create_artifact:
    name: "Create Plugin Artifact"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: "TEST: uninstall.php exists"
        run: |
          file="uninstall.php"
          if [ -f $file ]; then echo "$file exists"; echo "$file does not exist"; else exit 1; fi;

#      - name: "Get Dynamic Variables"
#        id: dynamic_variables
#        run: |
#          LATEST_TAG=$(git describe --tags --abbrev=0)
#          echo "latest tag: $LATEST_TAG"
#          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

#      - name: "Echo Statements"
#        run: |
#          echo "Latest Tag: $(git describe --tags --abbrev=0)"
#          echo "Repo Name: ${{ github.event.repository.name }}"
#          echo "Composer Name: ${{ github.repository }}";
#          echo "Repository Owner: ${{ github.repository_owner }}"
#          echo "Get Composer php value"
#          echo "Files in directory:"
#          ls -laGh
#          echo "Git Config"
#          git config -l
#
      - name: "Cache: Composer"
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: "Composer: Install"
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          dev: yes

#      - name: "Composer: Lint"
#        uses: php-actions/composer@v6
#        with:
#          command: "run-script lint"
#          php_version: 8.2

#      - name: Get Repository Owner
#        id: repo_owner
#        run: |
#          OWNER_EMAIL=$(curl -s "https://api.github.com/repos/${{ github.repository }}/owner" | jq -r '.email')
#          echo "OWNER_EMAIL: $OWNER_EMAIL";
#          echo "repository_owner_email=$OWNER_EMAIL" >> $GITHUB_OUTPUT
#
#      - name: Get Repository Description
#        id: repo_description
#        run: |
#          REPO_DESCRIPTION=$(curl -s "https://api.github.com/repos/${{ github.repository }}/readme" | jq -r '.content' | base64 -d)
#          echo 'REPO_DESCRIPTION: "$REPO_DESCRIPTION"';
#          echo 'repository_description="$REPO_DESCRIPTION"' >> $GITHUB_OUTPUT
#
#      - name: Print API data
#        run: |
#          echo "Repository Owner's Email: ${{ steps.repo_info.outputs.repository_owner_email }}"
#          echo "Repository Description: ${{ steps.repo_info.outputs.repository_description }}"

      - name: "Composer Config: Description"
        id: composer_config_description
        run: |
          PLUGIN_DESCRIPTION="$(composer config description)"
          echo 'value="PLUGIN_DESCRIPTION"' >> $GITHUB_OUTPUT

      - name: "Get next version"
        id: version_incrementer
        uses: reecetech/version-increment@2023.9.3

      - name: "Update Plugin Front Matter"
        run: |
          sed -i '/ * Version:/c\ * Version: ${{ steps.version_incrementer.outputs.version }}' ${{ env.PLUGIN_FILE }}
          sed -i '/ * Requires PHP:/c\ * Requires PHP: ${{ env.PHP_VERSION }}' ${{ env.PLUGIN_FILE }}
          sed -i '/ * Description:/c\ * Description: ${{ steps.composer_config_description.outputs.value }}' ${{ env.PLUGIN_FILE }}

#      - name: setup git config
#        run: |
#          git config user.name "GitHub Actions Bot"
#          git config user.email "<>"
#
#      - name: commit
#        run: |
#          git add ${{ env.PLUGIN_FILE }}
#          git commit -m "Incremented version" -m "skip ci skip actions"
#          git push origin feature/composerify

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Incrementing version number"
          tagging_message: '${{ steps.version_incrementer.outputs.version }}'
          file_pattern: '*.php composer.json'

      - name: Archive only specific files
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.event.repository.name }}-${{ steps.version_incrementer.outputs.version }}"
          path: |
            *
            !.git
            !.github
            !vendor
            !.gitignore
            !composer.json
            !composer.lock
            !README.md