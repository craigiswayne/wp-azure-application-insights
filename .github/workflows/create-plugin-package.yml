name: Create Plugin Package

on:
  push:
    branches:
      - main
      - develop
      - release/*
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Echo Statements"
        run: |
          echo "Latest Tag: ${{github.ref_name}}"
          echo "Repo Name: ${{ github.event.repository.name }}"
          echo "Composer Name: ${{ github.repository }}";
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Files in directory:"
          ls -laGh
          echo "Git Config"
          git config -l

      - name: Get Repository Owner
        id: repo_owner
        run: |
          OWNER_EMAIL=$(curl -s "https://api.github.com/repos/${{ github.repository }}/owner" | jq -r '.email')
          echo "repository_owner_email=$OWNER_EMAIL" >> $GITHUB_OUTPUT

      - name: Get Repository Description
        id: repo_description
        run: |
          REPO_DESCRIPTION=$(curl -s "https://api.github.com/repos/${{ github.repository }}/readme" | jq -r '.content' | base64 -d)
          echo "repository_description=$REPO_DESCRIPTION" >> $GITHUB_OUTPUT

      - name: Print API data
        run: |
          echo "Repository Owner's Email: ${{ steps.repo_info.outputs.repository_owner_email }}"
          echo "Repository Description: ${{ steps.repo_info.outputs.repository_description }}"

#      - name: Archive only specific files
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ github.event.repository.name }}
#          path: |
#            !.git
#            !.github
#            !.gitignore
#            !composer.json
#            !README.md