name: Create Plugin Package

on:
  push:
    branches:
      - main
      - develop
      - feature/check-uninstall-exists
  pull_request:
    branches:
      - main

permissions:
  contents: write

env:
  PHP_VERSION: 8.2

jobs:
  create_artifact:
    name: "Create Plugin Artifact"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: "TEST: uninstall.php file exists"
        run: |
          file="uninstalls.php"
          if [ -f $file ]; then echo "$file exists"; echo "$file does not exist"; else exit 1; fi;

#      - name: "Get Dynamic Variables"
#        id: dynamic_variables
#        run: |
#          LATEST_TAG=$(git describe --tags --abbrev=0)
#          echo "latest tag: $LATEST_TAG"
#          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

#      - name: "Echo Statements"
#        run: |
#          echo "Latest Tag: $(git describe --tags --abbrev=0)"
#          echo "Repo Name: ${{ github.event.repository.name }}"
#          echo "Composer Name: ${{ github.repository }}";
#          echo "Repository Owner: ${{ github.repository_owner }}"
#          echo "Get Composer php value"
#          echo "Files in directory:"
#          ls -laGh
#          echo "Git Config"
#          git config -l
#
      - name: "Cache: Composer"
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: "Composer: Install"
        uses: php-actions/composer@v6
        with:
          php_version: ${{ env.PHP_VERSION }}
          dev: yes

#      - name: "Get Required PHP Version"
#        id: php_version_from_composer
#        run: |
#          COMPOSER_PHP_VERSION=$(composer config platform.php)
#          echo "composer_php_version=$COMPOSER_PHP_VERSION" >> $GITHUB_OUTPUT

#      - name: "Composer: Lint"
#        uses: php-actions/composer@v6
#        with:
#          command: "run-script lint"
#          php_version: 8.2

#      - name: Get Repository Owner
#        id: repo_owner
#        run: |
#          OWNER_EMAIL=$(curl -s "https://api.github.com/repos/${{ github.repository }}/owner" | jq -r '.email')
#          echo "OWNER_EMAIL: $OWNER_EMAIL";
#          echo "repository_owner_email=$OWNER_EMAIL" >> $GITHUB_OUTPUT
#
#      - name: Get Repository Description
#        id: repo_description
#        run: |
#          REPO_DESCRIPTION=$(curl -s "https://api.github.com/repos/${{ github.repository }}/readme" | jq -r '.content' | base64 -d)
#          echo 'REPO_DESCRIPTION: "$REPO_DESCRIPTION"';
#          echo 'repository_description="$REPO_DESCRIPTION"' >> $GITHUB_OUTPUT
#
#      - name: Print API data
#        run: |
#          echo "Repository Owner's Email: ${{ steps.repo_info.outputs.repository_owner_email }}"
#          echo "Repository Description: ${{ steps.repo_info.outputs.repository_description }}"

#      - name: Get next version
#        uses: reecetech/version-increment@2023.9.3
#        id: version_incrementer

#      - name: "Update Plugin Front Matter"
#        run: |
#          echo "Updating Plugin Version"
#          sed -i '/ * Version:/c\ * Version: ${{ steps.version_incrementer.outputs.version }}' class-wp-azure-application-insights.php
#          echo "Updating PHP Version"
#          sed -i '/ * Requires PHP:/c\ * Requires PHP: ${{ env.PHP_VERSION }}' class-wp-azure-application-insights.php
#          composer config "platform.php" "${{ env.PHP_VERSION }}"

#      - name: setup git config
#        run: |
#          git config user.name "GitHub Actions Bot"
#          git config user.email "<>"
#
#      - name: commit
#        run: |
#          git add class-wp-azure-application-insights.php
#          git commit -m "Incremented version" -m "skip ci skip actions"
#          git push origin feature/composerify

#      - uses: stefanzweifel/git-auto-commit-action@v5
#        with:
#          commit_message: "Incrementing version number"
#          tagging_message: '${{ steps.version_incrementer.outputs.version }}'
#          file_pattern: '*.php composer.json'

#      - name: Archive only specific files
#        uses: actions/upload-artifact@v4
#        with:
#          name: "${{ github.event.repository.name }}-${{ steps.version_incrementer.outputs.version }}"
#          path: |
#            *
#            !.git
#            !.github
#            !vendor
#            !.gitignore
#            !composer.json
#            !composer.lock
#            !README.md

# TODO: set plugin meta data version from git tag
# TODO: set plugin meta data description from composer config (composer config description)
# TODO: test that the uninstall.php file exists